经过实验，我们发现，无论我们怎样优化搜索引擎，我们的程序在开局阶段的表现总是不够理想。一个重要的原因是开局阶段的选择往往非常多，从而限制了搜索的深度；另一方面，开局阶段的布局往往对后续的局面有着决定性的作用。因此，有必要采用一些经过千锤百炼地经典开局。

我们搜集了一些经典棋局的开局，将他存在一个文件当中。程序初始化的时候，就从数据文件当中将棋局读出来。与一般的使用哈希技术存储开局库不同，我们采用了Trie数据结构进行存储，即，将所有开局保存成一棵树，一个节点的儿子是所有可以由他经过一步得到的局面。这样储存的优点是既节省了空间又能够保证很高的查询效率。

另外，为了最大限度利用我们的开局库，我们将手头的开局进行旋转和翻转变幻，将得到的局面也保存到开局库当中，以应付更多的变化。

在具体寻找走法的时候，我们尝试了两种策略。一种是直接采用估值的办法，另一种是始终寻找后继走法最多的策略。后一种策略的意图是让程序尽可能多地使用开局库。事实证明这一策略比直接采用估值的办法更为理想。